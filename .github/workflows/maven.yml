# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: mvn -B package --file maven-examples/maven-example/pom.xml -s maven-examples/maven-example/.m2/settings.xml
    - name: Deploy with Maven
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: mvn deploy --file maven-examples/maven-example/pom.xml -s maven-examples/maven-example/.m2/settings.xml

    - name: Setup JF Cli
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ secrets.JF_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

    - name: DEBUG
      run: ls /home/runner/.m2 && ls /home/runner/.m2/repository

    - name: Build Maven With JFrog CLI
      env:
        # Generated and maintained by GitHub
        JFROG_CLI_BUILD_NAME: jfrog-mvn-build-example
        # JFrog organization secret
        JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
      run: |
        # Export the build name and build nuber
        # Collect environment variables for the build
        #jf rt build-collect-env
        # Collect VCS details from git and add them to the build
        #jf rt build-add-git
        # Collect dependencies
        #jf rt build-add-dependencies --regexp * $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER /home/runner/.m2/repository
        #jf rt build-add-dependencies --spec=/home/runner/.m2/repository/log4j $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
        # Trying Max command to have deps into buildInfo
        jf mvn-config
        jf mvn clean install --file maven-examples/maven-example/pom.xml
    
    - name: Display structure of uploaded files
      run: ls -R /home/runner/
      
    - name: Upload math result for job 1
      uses: actions/upload-artifact@v4.4.3
      with:
        name: maven-info
        path: /home/runner/.m2/repository
          
        
        
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download math result for job 1
      uses: actions/download-artifact@v4.1.8
      with:
        name: maven-info
        path: /home/runner/.m2/repository

    - name: Display structure of downloaded files
      run: ls -R

    - name: Setup JF Cli
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ secrets.JF_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

    - name: Publish Build info With JFrog CLI
      env:
      # Generated and maintained by GitHub
        JFROG_CLI_BUILD_NAME: jfrog-mvn-build-example
        # JFrog organization secret
        JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
      # Publish build info
      run: jf rt build-publish
